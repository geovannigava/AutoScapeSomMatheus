#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Projeto.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="projeto")]
	public partial class ProjetoDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCidade(Cidade instance);
    partial void UpdateCidade(Cidade instance);
    partial void DeleteCidade(Cidade instance);
    partial void InsertTipoProduto(TipoProduto instance);
    partial void UpdateTipoProduto(TipoProduto instance);
    partial void DeleteTipoProduto(TipoProduto instance);
    partial void InsertEndereco(Endereco instance);
    partial void UpdateEndereco(Endereco instance);
    partial void DeleteEndereco(Endereco instance);
    partial void InsertMarca(Marca instance);
    partial void UpdateMarca(Marca instance);
    partial void DeleteMarca(Marca instance);
    partial void InsertModelo(Modelo instance);
    partial void UpdateModelo(Modelo instance);
    partial void DeleteModelo(Modelo instance);
    partial void InsertProdutoModelo(ProdutoModelo instance);
    partial void UpdateProdutoModelo(ProdutoModelo instance);
    partial void DeleteProdutoModelo(ProdutoModelo instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertVendaCancel(VendaCancel instance);
    partial void UpdateVendaCancel(VendaCancel instance);
    partial void DeleteVendaCancel(VendaCancel instance);
    partial void InsertVenda(Venda instance);
    partial void UpdateVenda(Venda instance);
    partial void DeleteVenda(Venda instance);
    partial void InsertEntradaCancel(EntradaCancel instance);
    partial void UpdateEntradaCancel(EntradaCancel instance);
    partial void DeleteEntradaCancel(EntradaCancel instance);
    partial void InsertProduto(Produto instance);
    partial void UpdateProduto(Produto instance);
    partial void DeleteProduto(Produto instance);
    partial void InsertEntrada(Entrada instance);
    partial void UpdateEntrada(Entrada instance);
    partial void DeleteEntrada(Entrada instance);
    partial void InsertEstoque(Estoque instance);
    partial void UpdateEstoque(Estoque instance);
    partial void DeleteEstoque(Estoque instance);
    partial void InsertItensVenda(ItensVenda instance);
    partial void UpdateItensVenda(ItensVenda instance);
    partial void DeleteItensVenda(ItensVenda instance);
    #endregion
		
		public ProjetoDataClassesDataContext() : 
				base(global::Projeto.DataAccess.Properties.Settings.Default.projetoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProjetoDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjetoDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjetoDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjetoDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cidade> Cidade
		{
			get
			{
				return this.GetTable<Cidade>();
			}
		}
		
		public System.Data.Linq.Table<TipoProduto> TipoProduto
		{
			get
			{
				return this.GetTable<TipoProduto>();
			}
		}
		
		public System.Data.Linq.Table<Endereco> Endereco
		{
			get
			{
				return this.GetTable<Endereco>();
			}
		}
		
		public System.Data.Linq.Table<Marca> Marca
		{
			get
			{
				return this.GetTable<Marca>();
			}
		}
		
		public System.Data.Linq.Table<Modelo> Modelo
		{
			get
			{
				return this.GetTable<Modelo>();
			}
		}
		
		public System.Data.Linq.Table<ProdutoModelo> ProdutoModelo
		{
			get
			{
				return this.GetTable<ProdutoModelo>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<VendaCancel> VendaCancel
		{
			get
			{
				return this.GetTable<VendaCancel>();
			}
		}
		
		public System.Data.Linq.Table<Venda> Venda
		{
			get
			{
				return this.GetTable<Venda>();
			}
		}
		
		public System.Data.Linq.Table<EntradaCancel> EntradaCancel
		{
			get
			{
				return this.GetTable<EntradaCancel>();
			}
		}
		
		public System.Data.Linq.Table<Produto> Produto
		{
			get
			{
				return this.GetTable<Produto>();
			}
		}
		
		public System.Data.Linq.Table<Entrada> Entrada
		{
			get
			{
				return this.GetTable<Entrada>();
			}
		}
		
		public System.Data.Linq.Table<Estoque> Estoque
		{
			get
			{
				return this.GetTable<Estoque>();
			}
		}
		
		public System.Data.Linq.Table<ItensVenda> ItensVenda
		{
			get
			{
				return this.GetTable<ItensVenda>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cidade")]
	public partial class Cidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_cidade;
		
		private string _nome;
		
		private string _estado;
		
		private EntitySet<Endereco> _Endereco;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_cidadeChanging(int value);
    partial void Onid_cidadeChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    #endregion
		
		public Cidade()
		{
			this._Endereco = new EntitySet<Endereco>(new Action<Endereco>(this.attach_Endereco), new Action<Endereco>(this.detach_Endereco));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cidade", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_cidade
		{
			get
			{
				return this._id_cidade;
			}
			set
			{
				if ((this._id_cidade != value))
				{
					this.Onid_cidadeChanging(value);
					this.SendPropertyChanging();
					this._id_cidade = value;
					this.SendPropertyChanged("id_cidade");
					this.Onid_cidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Endereco", Storage="_Endereco", ThisKey="id_cidade", OtherKey="cidade")]
		public EntitySet<Endereco> Endereco
		{
			get
			{
				return this._Endereco;
			}
			set
			{
				this._Endereco.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Endereco(Endereco entity)
		{
			this.SendPropertyChanging();
			entity.Cidade1 = this;
		}
		
		private void detach_Endereco(Endereco entity)
		{
			this.SendPropertyChanging();
			entity.Cidade1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tipo_produto")]
	public partial class TipoProduto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private EntitySet<Produto> _Produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    #endregion
		
		public TipoProduto()
		{
			this._Produto = new EntitySet<Produto>(new Action<Produto>(this.attach_Produto), new Action<Produto>(this.detach_Produto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(50)")]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProduto_Produto", Storage="_Produto", ThisKey="id", OtherKey="id_tipo_produto")]
		public EntitySet<Produto> Produto
		{
			get
			{
				return this._Produto;
			}
			set
			{
				this._Produto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.TipoProduto = this;
		}
		
		private void detach_Produto(Produto entity)
		{
			this.SendPropertyChanging();
			entity.TipoProduto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.endereco")]
	public partial class Endereco : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _rua;
		
		private string _numero;
		
		private string _bairro;
		
		private int _cidade;
		
		private string _cep;
		
		private EntitySet<Cliente> _Cliente;
		
		private EntityRef<Cidade> _Cidade1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnruaChanging(string value);
    partial void OnruaChanged();
    partial void OnnumeroChanging(string value);
    partial void OnnumeroChanged();
    partial void OnbairroChanging(string value);
    partial void OnbairroChanged();
    partial void OncidadeChanging(int value);
    partial void OncidadeChanged();
    partial void OncepChanging(string value);
    partial void OncepChanged();
    #endregion
		
		public Endereco()
		{
			this._Cliente = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Cliente), new Action<Cliente>(this.detach_Cliente));
			this._Cidade1 = default(EntityRef<Cidade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rua", DbType="NVarChar(100)")]
		public string rua
		{
			get
			{
				return this._rua;
			}
			set
			{
				if ((this._rua != value))
				{
					this.OnruaChanging(value);
					this.SendPropertyChanging();
					this._rua = value;
					this.SendPropertyChanged("rua");
					this.OnruaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero", DbType="NVarChar(50)")]
		public string numero
		{
			get
			{
				return this._numero;
			}
			set
			{
				if ((this._numero != value))
				{
					this.OnnumeroChanging(value);
					this.SendPropertyChanging();
					this._numero = value;
					this.SendPropertyChanged("numero");
					this.OnnumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bairro", DbType="NVarChar(100)")]
		public string bairro
		{
			get
			{
				return this._bairro;
			}
			set
			{
				if ((this._bairro != value))
				{
					this.OnbairroChanging(value);
					this.SendPropertyChanging();
					this._bairro = value;
					this.SendPropertyChanged("bairro");
					this.OnbairroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cidade", DbType="Int NOT NULL")]
		public int cidade
		{
			get
			{
				return this._cidade;
			}
			set
			{
				if ((this._cidade != value))
				{
					if (this._Cidade1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncidadeChanging(value);
					this.SendPropertyChanging();
					this._cidade = value;
					this.SendPropertyChanged("cidade");
					this.OncidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cep", DbType="NVarChar(50)")]
		public string cep
		{
			get
			{
				return this._cep;
			}
			set
			{
				if ((this._cep != value))
				{
					this.OncepChanging(value);
					this.SendPropertyChanging();
					this._cep = value;
					this.SendPropertyChanged("cep");
					this.OncepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Endereco_Cliente", Storage="_Cliente", ThisKey="id", OtherKey="id_endereco")]
		public EntitySet<Cliente> Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				this._Cliente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Endereco", Storage="_Cidade1", ThisKey="cidade", OtherKey="id_cidade", IsForeignKey=true)]
		public Cidade Cidade1
		{
			get
			{
				return this._Cidade1.Entity;
			}
			set
			{
				Cidade previousValue = this._Cidade1.Entity;
				if (((previousValue != value) 
							|| (this._Cidade1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cidade1.Entity = null;
						previousValue.Endereco.Remove(this);
					}
					this._Cidade1.Entity = value;
					if ((value != null))
					{
						value.Endereco.Add(this);
						this._cidade = value.id_cidade;
					}
					else
					{
						this._cidade = default(int);
					}
					this.SendPropertyChanged("Cidade1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Endereco = this;
		}
		
		private void detach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Endereco = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.marca")]
	public partial class Marca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private EntitySet<Modelo> _Modelo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    #endregion
		
		public Marca()
		{
			this._Modelo = new EntitySet<Modelo>(new Action<Modelo>(this.attach_Modelo), new Action<Modelo>(this.detach_Modelo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(255)")]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Modelo", Storage="_Modelo", ThisKey="id", OtherKey="marca")]
		public EntitySet<Modelo> Modelo
		{
			get
			{
				return this._Modelo;
			}
			set
			{
				this._Modelo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Modelo(Modelo entity)
		{
			this.SendPropertyChanging();
			entity.Marca1 = this;
		}
		
		private void detach_Modelo(Modelo entity)
		{
			this.SendPropertyChanging();
			entity.Marca1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.modelo")]
	public partial class Modelo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private int _marca;
		
		private EntitySet<ProdutoModelo> _ProdutoModelo;
		
		private EntityRef<Marca> _Marca1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnmarcaChanging(int value);
    partial void OnmarcaChanged();
    #endregion
		
		public Modelo()
		{
			this._ProdutoModelo = new EntitySet<ProdutoModelo>(new Action<ProdutoModelo>(this.attach_ProdutoModelo), new Action<ProdutoModelo>(this.detach_ProdutoModelo));
			this._Marca1 = default(EntityRef<Marca>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(255)")]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marca", DbType="Int NOT NULL")]
		public int marca
		{
			get
			{
				return this._marca;
			}
			set
			{
				if ((this._marca != value))
				{
					if (this._Marca1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmarcaChanging(value);
					this.SendPropertyChanging();
					this._marca = value;
					this.SendPropertyChanged("marca");
					this.OnmarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_ProdutoModelo", Storage="_ProdutoModelo", ThisKey="id", OtherKey="id_modelo")]
		public EntitySet<ProdutoModelo> ProdutoModelo
		{
			get
			{
				return this._ProdutoModelo;
			}
			set
			{
				this._ProdutoModelo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Modelo", Storage="_Marca1", ThisKey="marca", OtherKey="id", IsForeignKey=true)]
		public Marca Marca1
		{
			get
			{
				return this._Marca1.Entity;
			}
			set
			{
				Marca previousValue = this._Marca1.Entity;
				if (((previousValue != value) 
							|| (this._Marca1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marca1.Entity = null;
						previousValue.Modelo.Remove(this);
					}
					this._Marca1.Entity = value;
					if ((value != null))
					{
						value.Modelo.Add(this);
						this._marca = value.id;
					}
					else
					{
						this._marca = default(int);
					}
					this.SendPropertyChanged("Marca1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProdutoModelo(ProdutoModelo entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = this;
		}
		
		private void detach_ProdutoModelo(ProdutoModelo entity)
		{
			this.SendPropertyChanging();
			entity.Modelo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.produto_modelo")]
	public partial class ProdutoModelo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_produto;
		
		private int _id_modelo;
		
		private int _id;
		
		private EntityRef<Modelo> _Modelo;
		
		private EntityRef<Produto> _Produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_produtoChanging(int value);
    partial void Onid_produtoChanged();
    partial void Onid_modeloChanging(int value);
    partial void Onid_modeloChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public ProdutoModelo()
		{
			this._Modelo = default(EntityRef<Modelo>);
			this._Produto = default(EntityRef<Produto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produto", DbType="Int NOT NULL")]
		public int id_produto
		{
			get
			{
				return this._id_produto;
			}
			set
			{
				if ((this._id_produto != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_produtoChanging(value);
					this.SendPropertyChanging();
					this._id_produto = value;
					this.SendPropertyChanged("id_produto");
					this.Onid_produtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_modelo", DbType="Int NOT NULL")]
		public int id_modelo
		{
			get
			{
				return this._id_modelo;
			}
			set
			{
				if ((this._id_modelo != value))
				{
					if (this._Modelo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_modeloChanging(value);
					this.SendPropertyChanging();
					this._id_modelo = value;
					this.SendPropertyChanged("id_modelo");
					this.Onid_modeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modelo_ProdutoModelo", Storage="_Modelo", ThisKey="id_modelo", OtherKey="id", IsForeignKey=true)]
		public Modelo Modelo
		{
			get
			{
				return this._Modelo.Entity;
			}
			set
			{
				Modelo previousValue = this._Modelo.Entity;
				if (((previousValue != value) 
							|| (this._Modelo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Modelo.Entity = null;
						previousValue.ProdutoModelo.Remove(this);
					}
					this._Modelo.Entity = value;
					if ((value != null))
					{
						value.ProdutoModelo.Add(this);
						this._id_modelo = value.id;
					}
					else
					{
						this._id_modelo = default(int);
					}
					this.SendPropertyChanged("Modelo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_ProdutoModelo", Storage="_Produto", ThisKey="id_produto", OtherKey="id", IsForeignKey=true)]
		public Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.ProdutoModelo.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.ProdutoModelo.Add(this);
						this._id_produto = value.id;
					}
					else
					{
						this._id_produto = default(int);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private string _email;
		
		private int _id_endereco;
		
		private string _celular;
		
		private string _tel_fixo;
		
		private System.Nullable<System.DateTime> _data_nasc;
		
		private EntitySet<Venda> _Venda;
		
		private EntityRef<Endereco> _Endereco;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onid_enderecoChanging(int value);
    partial void Onid_enderecoChanged();
    partial void OncelularChanging(string value);
    partial void OncelularChanged();
    partial void Ontel_fixoChanging(string value);
    partial void Ontel_fixoChanged();
    partial void Ondata_nascChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_nascChanged();
    #endregion
		
		public Cliente()
		{
			this._Venda = new EntitySet<Venda>(new Action<Venda>(this.attach_Venda), new Action<Venda>(this.detach_Venda));
			this._Endereco = default(EntityRef<Endereco>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(90)")]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(80)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_endereco", DbType="Int NOT NULL")]
		public int id_endereco
		{
			get
			{
				return this._id_endereco;
			}
			set
			{
				if ((this._id_endereco != value))
				{
					if (this._Endereco.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_enderecoChanging(value);
					this.SendPropertyChanging();
					this._id_endereco = value;
					this.SendPropertyChanged("id_endereco");
					this.Onid_enderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="NVarChar(50)")]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this.OncelularChanging(value);
					this.SendPropertyChanging();
					this._celular = value;
					this.SendPropertyChanged("celular");
					this.OncelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel_fixo", DbType="NVarChar(50)")]
		public string tel_fixo
		{
			get
			{
				return this._tel_fixo;
			}
			set
			{
				if ((this._tel_fixo != value))
				{
					this.Ontel_fixoChanging(value);
					this.SendPropertyChanging();
					this._tel_fixo = value;
					this.SendPropertyChanged("tel_fixo");
					this.Ontel_fixoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_nasc", DbType="Date")]
		public System.Nullable<System.DateTime> data_nasc
		{
			get
			{
				return this._data_nasc;
			}
			set
			{
				if ((this._data_nasc != value))
				{
					this.Ondata_nascChanging(value);
					this.SendPropertyChanging();
					this._data_nasc = value;
					this.SendPropertyChanged("data_nasc");
					this.Ondata_nascChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venda", Storage="_Venda", ThisKey="id", OtherKey="id_cliente")]
		public EntitySet<Venda> Venda
		{
			get
			{
				return this._Venda;
			}
			set
			{
				this._Venda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Endereco_Cliente", Storage="_Endereco", ThisKey="id_endereco", OtherKey="id", IsForeignKey=true)]
		public Endereco Endereco
		{
			get
			{
				return this._Endereco.Entity;
			}
			set
			{
				Endereco previousValue = this._Endereco.Entity;
				if (((previousValue != value) 
							|| (this._Endereco.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Endereco.Entity = null;
						previousValue.Cliente.Remove(this);
					}
					this._Endereco.Entity = value;
					if ((value != null))
					{
						value.Cliente.Add(this);
						this._id_endereco = value.id;
					}
					else
					{
						this._id_endereco = default(int);
					}
					this.SendPropertyChanged("Endereco");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Venda(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Venda(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.venda_cancel")]
	public partial class VendaCancel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_venda;
		
		private string _motivo;
		
		private System.DateTime _data;
		
		private EntityRef<Venda> _Venda;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_vendaChanging(int value);
    partial void Onid_vendaChanged();
    partial void OnmotivoChanging(string value);
    partial void OnmotivoChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    #endregion
		
		public VendaCancel()
		{
			this._Venda = default(EntityRef<Venda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_venda", DbType="Int NOT NULL")]
		public int id_venda
		{
			get
			{
				return this._id_venda;
			}
			set
			{
				if ((this._id_venda != value))
				{
					if (this._Venda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_vendaChanging(value);
					this.SendPropertyChanging();
					this._id_venda = value;
					this.SendPropertyChanged("id_venda");
					this.Onid_vendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motivo", DbType="NVarChar(255)")]
		public string motivo
		{
			get
			{
				return this._motivo;
			}
			set
			{
				if ((this._motivo != value))
				{
					this.OnmotivoChanging(value);
					this.SendPropertyChanging();
					this._motivo = value;
					this.SendPropertyChanged("motivo");
					this.OnmotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Date NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_VendaCancel", Storage="_Venda", ThisKey="id_venda", OtherKey="id", IsForeignKey=true)]
		public Venda Venda
		{
			get
			{
				return this._Venda.Entity;
			}
			set
			{
				Venda previousValue = this._Venda.Entity;
				if (((previousValue != value) 
							|| (this._Venda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venda.Entity = null;
						previousValue.VendaCancel.Remove(this);
					}
					this._Venda.Entity = value;
					if ((value != null))
					{
						value.VendaCancel.Add(this);
						this._id_venda = value.id;
					}
					else
					{
						this._id_venda = default(int);
					}
					this.SendPropertyChanged("Venda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.venda")]
	public partial class Venda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _data;
		
		private System.Nullable<decimal> _valortotal;
		
		private System.Nullable<int> _id_cliente;
		
		private System.Nullable<bool> _ativo;
		
		private EntitySet<VendaCancel> _VendaCancel;
		
		private EntitySet<ItensVenda> _ItensVenda;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnvalortotalChanging(System.Nullable<decimal> value);
    partial void OnvalortotalChanged();
    partial void Onid_clienteChanging(System.Nullable<int> value);
    partial void Onid_clienteChanged();
    partial void OnativoChanging(System.Nullable<bool> value);
    partial void OnativoChanged();
    #endregion
		
		public Venda()
		{
			this._VendaCancel = new EntitySet<VendaCancel>(new Action<VendaCancel>(this.attach_VendaCancel), new Action<VendaCancel>(this.detach_VendaCancel));
			this._ItensVenda = new EntitySet<ItensVenda>(new Action<ItensVenda>(this.attach_ItensVenda), new Action<ItensVenda>(this.detach_ItensVenda));
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Date NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valortotal", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> valortotal
		{
			get
			{
				return this._valortotal;
			}
			set
			{
				if ((this._valortotal != value))
				{
					this.OnvalortotalChanging(value);
					this.SendPropertyChanging();
					this._valortotal = value;
					this.SendPropertyChanged("valortotal");
					this.OnvalortotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cliente", DbType="Int")]
		public System.Nullable<int> id_cliente
		{
			get
			{
				return this._id_cliente;
			}
			set
			{
				if ((this._id_cliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_clienteChanging(value);
					this.SendPropertyChanging();
					this._id_cliente = value;
					this.SendPropertyChanged("id_cliente");
					this.Onid_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ativo", DbType="Bit")]
		public System.Nullable<bool> ativo
		{
			get
			{
				return this._ativo;
			}
			set
			{
				if ((this._ativo != value))
				{
					this.OnativoChanging(value);
					this.SendPropertyChanging();
					this._ativo = value;
					this.SendPropertyChanged("ativo");
					this.OnativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_VendaCancel", Storage="_VendaCancel", ThisKey="id", OtherKey="id_venda")]
		public EntitySet<VendaCancel> VendaCancel
		{
			get
			{
				return this._VendaCancel;
			}
			set
			{
				this._VendaCancel.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_itens_venda", Storage="_ItensVenda", ThisKey="id", OtherKey="id_venda")]
		public EntitySet<ItensVenda> ItensVenda
		{
			get
			{
				return this._ItensVenda;
			}
			set
			{
				this._ItensVenda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venda", Storage="_Cliente", ThisKey="id_cliente", OtherKey="id", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Venda.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Venda.Add(this);
						this._id_cliente = value.id;
					}
					else
					{
						this._id_cliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VendaCancel(VendaCancel entity)
		{
			this.SendPropertyChanging();
			entity.Venda = this;
		}
		
		private void detach_VendaCancel(VendaCancel entity)
		{
			this.SendPropertyChanging();
			entity.Venda = null;
		}
		
		private void attach_ItensVenda(ItensVenda entity)
		{
			this.SendPropertyChanging();
			entity.Venda = this;
		}
		
		private void detach_ItensVenda(ItensVenda entity)
		{
			this.SendPropertyChanging();
			entity.Venda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entrada_cancel")]
	public partial class EntradaCancel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_entrada;
		
		private System.DateTime _data;
		
		private string _motivo;
		
		private EntityRef<Entrada> _Entrada;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_entradaChanging(int value);
    partial void Onid_entradaChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnmotivoChanging(string value);
    partial void OnmotivoChanged();
    #endregion
		
		public EntradaCancel()
		{
			this._Entrada = default(EntityRef<Entrada>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_entrada", DbType="Int NOT NULL")]
		public int id_entrada
		{
			get
			{
				return this._id_entrada;
			}
			set
			{
				if ((this._id_entrada != value))
				{
					if (this._Entrada.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_entradaChanging(value);
					this.SendPropertyChanging();
					this._id_entrada = value;
					this.SendPropertyChanged("id_entrada");
					this.Onid_entradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Date NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motivo", DbType="NVarChar(255)")]
		public string motivo
		{
			get
			{
				return this._motivo;
			}
			set
			{
				if ((this._motivo != value))
				{
					this.OnmotivoChanging(value);
					this.SendPropertyChanging();
					this._motivo = value;
					this.SendPropertyChanged("motivo");
					this.OnmotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entrada_EntradaCancel", Storage="_Entrada", ThisKey="id_entrada", OtherKey="id", IsForeignKey=true)]
		public Entrada Entrada
		{
			get
			{
				return this._Entrada.Entity;
			}
			set
			{
				Entrada previousValue = this._Entrada.Entity;
				if (((previousValue != value) 
							|| (this._Entrada.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entrada.Entity = null;
						previousValue.EntradaCancel.Remove(this);
					}
					this._Entrada.Entity = value;
					if ((value != null))
					{
						value.EntradaCancel.Add(this);
						this._id_entrada = value.id;
					}
					else
					{
						this._id_entrada = default(int);
					}
					this.SendPropertyChanged("Entrada");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.produto")]
	public partial class Produto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _codigo;
		
		private string _descricao;
		
		private System.Nullable<decimal> _valor;
		
		private string _marca;
		
		private string _modelo;
		
		private int _id_tipo_produto;
		
		private string _especie;
		
		private string _cod_equi;
		
		private System.Nullable<int> _qtde_alerta;
		
		private EntitySet<ProdutoModelo> _ProdutoModelo;
		
		private EntitySet<Entrada> _Entrada;
		
		private EntitySet<Estoque> _Estoque;
		
		private EntitySet<ItensVenda> _ItensVenda;
		
		private EntityRef<TipoProduto> _TipoProduto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodigoChanging(string value);
    partial void OncodigoChanged();
    partial void OndescricaoChanging(string value);
    partial void OndescricaoChanged();
    partial void OnvalorChanging(System.Nullable<decimal> value);
    partial void OnvalorChanged();
    partial void OnmarcaChanging(string value);
    partial void OnmarcaChanged();
    partial void OnmodeloChanging(string value);
    partial void OnmodeloChanged();
    partial void Onid_tipo_produtoChanging(int value);
    partial void Onid_tipo_produtoChanged();
    partial void OnespecieChanging(string value);
    partial void OnespecieChanged();
    partial void Oncod_equiChanging(string value);
    partial void Oncod_equiChanged();
    partial void Onqtde_alertaChanging(System.Nullable<int> value);
    partial void Onqtde_alertaChanged();
    #endregion
		
		public Produto()
		{
			this._ProdutoModelo = new EntitySet<ProdutoModelo>(new Action<ProdutoModelo>(this.attach_ProdutoModelo), new Action<ProdutoModelo>(this.detach_ProdutoModelo));
			this._Entrada = new EntitySet<Entrada>(new Action<Entrada>(this.attach_Entrada), new Action<Entrada>(this.detach_Entrada));
			this._Estoque = new EntitySet<Estoque>(new Action<Estoque>(this.attach_Estoque), new Action<Estoque>(this.detach_Estoque));
			this._ItensVenda = new EntitySet<ItensVenda>(new Action<ItensVenda>(this.attach_ItensVenda), new Action<ItensVenda>(this.detach_ItensVenda));
			this._TipoProduto = default(EntityRef<TipoProduto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo", DbType="NVarChar(50)")]
		public string codigo
		{
			get
			{
				return this._codigo;
			}
			set
			{
				if ((this._codigo != value))
				{
					this.OncodigoChanging(value);
					this.SendPropertyChanging();
					this._codigo = value;
					this.SendPropertyChanged("codigo");
					this.OncodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricao", DbType="NVarChar(255)")]
		public string descricao
		{
			get
			{
				return this._descricao;
			}
			set
			{
				if ((this._descricao != value))
				{
					this.OndescricaoChanging(value);
					this.SendPropertyChanging();
					this._descricao = value;
					this.SendPropertyChanged("descricao");
					this.OndescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valor", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> valor
		{
			get
			{
				return this._valor;
			}
			set
			{
				if ((this._valor != value))
				{
					this.OnvalorChanging(value);
					this.SendPropertyChanging();
					this._valor = value;
					this.SendPropertyChanged("valor");
					this.OnvalorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marca", DbType="NVarChar(50)")]
		public string marca
		{
			get
			{
				return this._marca;
			}
			set
			{
				if ((this._marca != value))
				{
					this.OnmarcaChanging(value);
					this.SendPropertyChanging();
					this._marca = value;
					this.SendPropertyChanged("marca");
					this.OnmarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modelo", DbType="NVarChar(50)")]
		public string modelo
		{
			get
			{
				return this._modelo;
			}
			set
			{
				if ((this._modelo != value))
				{
					this.OnmodeloChanging(value);
					this.SendPropertyChanging();
					this._modelo = value;
					this.SendPropertyChanged("modelo");
					this.OnmodeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tipo_produto", DbType="Int NOT NULL")]
		public int id_tipo_produto
		{
			get
			{
				return this._id_tipo_produto;
			}
			set
			{
				if ((this._id_tipo_produto != value))
				{
					if (this._TipoProduto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tipo_produtoChanging(value);
					this.SendPropertyChanging();
					this._id_tipo_produto = value;
					this.SendPropertyChanged("id_tipo_produto");
					this.Onid_tipo_produtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_especie", DbType="NVarChar(50)")]
		public string especie
		{
			get
			{
				return this._especie;
			}
			set
			{
				if ((this._especie != value))
				{
					this.OnespecieChanging(value);
					this.SendPropertyChanging();
					this._especie = value;
					this.SendPropertyChanged("especie");
					this.OnespecieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cod_equi", DbType="NVarChar(20)")]
		public string cod_equi
		{
			get
			{
				return this._cod_equi;
			}
			set
			{
				if ((this._cod_equi != value))
				{
					this.Oncod_equiChanging(value);
					this.SendPropertyChanging();
					this._cod_equi = value;
					this.SendPropertyChanged("cod_equi");
					this.Oncod_equiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qtde_alerta", DbType="Int")]
		public System.Nullable<int> qtde_alerta
		{
			get
			{
				return this._qtde_alerta;
			}
			set
			{
				if ((this._qtde_alerta != value))
				{
					this.Onqtde_alertaChanging(value);
					this.SendPropertyChanging();
					this._qtde_alerta = value;
					this.SendPropertyChanged("qtde_alerta");
					this.Onqtde_alertaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_ProdutoModelo", Storage="_ProdutoModelo", ThisKey="id", OtherKey="id_produto")]
		public EntitySet<ProdutoModelo> ProdutoModelo
		{
			get
			{
				return this._ProdutoModelo;
			}
			set
			{
				this._ProdutoModelo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_Entrada", Storage="_Entrada", ThisKey="id", OtherKey="id_produto")]
		public EntitySet<Entrada> Entrada
		{
			get
			{
				return this._Entrada;
			}
			set
			{
				this._Entrada.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_Estoque", Storage="_Estoque", ThisKey="id", OtherKey="id_produto")]
		public EntitySet<Estoque> Estoque
		{
			get
			{
				return this._Estoque;
			}
			set
			{
				this._Estoque.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_itens_venda", Storage="_ItensVenda", ThisKey="id", OtherKey="id_produto")]
		public EntitySet<ItensVenda> ItensVenda
		{
			get
			{
				return this._ItensVenda;
			}
			set
			{
				this._ItensVenda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProduto_Produto", Storage="_TipoProduto", ThisKey="id_tipo_produto", OtherKey="id", IsForeignKey=true)]
		public TipoProduto TipoProduto
		{
			get
			{
				return this._TipoProduto.Entity;
			}
			set
			{
				TipoProduto previousValue = this._TipoProduto.Entity;
				if (((previousValue != value) 
							|| (this._TipoProduto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoProduto.Entity = null;
						previousValue.Produto.Remove(this);
					}
					this._TipoProduto.Entity = value;
					if ((value != null))
					{
						value.Produto.Add(this);
						this._id_tipo_produto = value.id;
					}
					else
					{
						this._id_tipo_produto = default(int);
					}
					this.SendPropertyChanged("TipoProduto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProdutoModelo(ProdutoModelo entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_ProdutoModelo(ProdutoModelo entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
		
		private void attach_Entrada(Entrada entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_Entrada(Entrada entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
		
		private void attach_Estoque(Estoque entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_Estoque(Estoque entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
		
		private void attach_ItensVenda(ItensVenda entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_ItensVenda(ItensVenda entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entrada")]
	public partial class Entrada : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _data;
		
		private int _qtde;
		
		private System.Nullable<decimal> _valor_compra;
		
		private int _id_produto;
		
		private System.Nullable<bool> _ativo;
		
		private System.Nullable<char> _C_ou_S;
		
		private EntitySet<EntradaCancel> _EntradaCancel;
		
		private EntityRef<Produto> _Produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnqtdeChanging(int value);
    partial void OnqtdeChanged();
    partial void Onvalor_compraChanging(System.Nullable<decimal> value);
    partial void Onvalor_compraChanged();
    partial void Onid_produtoChanging(int value);
    partial void Onid_produtoChanged();
    partial void OnativoChanging(System.Nullable<bool> value);
    partial void OnativoChanged();
    partial void OnC_ou_SChanging(System.Nullable<char> value);
    partial void OnC_ou_SChanged();
    #endregion
		
		public Entrada()
		{
			this._EntradaCancel = new EntitySet<EntradaCancel>(new Action<EntradaCancel>(this.attach_EntradaCancel), new Action<EntradaCancel>(this.detach_EntradaCancel));
			this._Produto = default(EntityRef<Produto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Date NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qtde", DbType="Int NOT NULL")]
		public int qtde
		{
			get
			{
				return this._qtde;
			}
			set
			{
				if ((this._qtde != value))
				{
					this.OnqtdeChanging(value);
					this.SendPropertyChanging();
					this._qtde = value;
					this.SendPropertyChanged("qtde");
					this.OnqtdeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valor_compra", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> valor_compra
		{
			get
			{
				return this._valor_compra;
			}
			set
			{
				if ((this._valor_compra != value))
				{
					this.Onvalor_compraChanging(value);
					this.SendPropertyChanging();
					this._valor_compra = value;
					this.SendPropertyChanged("valor_compra");
					this.Onvalor_compraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produto", DbType="Int NOT NULL")]
		public int id_produto
		{
			get
			{
				return this._id_produto;
			}
			set
			{
				if ((this._id_produto != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_produtoChanging(value);
					this.SendPropertyChanging();
					this._id_produto = value;
					this.SendPropertyChanged("id_produto");
					this.Onid_produtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ativo", DbType="Bit")]
		public System.Nullable<bool> ativo
		{
			get
			{
				return this._ativo;
			}
			set
			{
				if ((this._ativo != value))
				{
					this.OnativoChanging(value);
					this.SendPropertyChanging();
					this._ativo = value;
					this.SendPropertyChanged("ativo");
					this.OnativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_ou_S", DbType="Char(1)")]
		public System.Nullable<char> C_ou_S
		{
			get
			{
				return this._C_ou_S;
			}
			set
			{
				if ((this._C_ou_S != value))
				{
					this.OnC_ou_SChanging(value);
					this.SendPropertyChanging();
					this._C_ou_S = value;
					this.SendPropertyChanged("C_ou_S");
					this.OnC_ou_SChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entrada_EntradaCancel", Storage="_EntradaCancel", ThisKey="id", OtherKey="id_entrada")]
		public EntitySet<EntradaCancel> EntradaCancel
		{
			get
			{
				return this._EntradaCancel;
			}
			set
			{
				this._EntradaCancel.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_Entrada", Storage="_Produto", ThisKey="id_produto", OtherKey="id", IsForeignKey=true)]
		public Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.Entrada.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.Entrada.Add(this);
						this._id_produto = value.id;
					}
					else
					{
						this._id_produto = default(int);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntradaCancel(EntradaCancel entity)
		{
			this.SendPropertyChanging();
			entity.Entrada = this;
		}
		
		private void detach_EntradaCancel(EntradaCancel entity)
		{
			this.SendPropertyChanging();
			entity.Entrada = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.estoque")]
	public partial class Estoque : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_produto;
		
		private int _qtde;
		
		private int _qtde_C;
		
		private int _qtde_S;
		
		private EntityRef<Produto> _Produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_produtoChanging(int value);
    partial void Onid_produtoChanged();
    partial void OnqtdeChanging(int value);
    partial void OnqtdeChanged();
    partial void Onqtde_CChanging(int value);
    partial void Onqtde_CChanged();
    partial void Onqtde_SChanging(int value);
    partial void Onqtde_SChanged();
    #endregion
		
		public Estoque()
		{
			this._Produto = default(EntityRef<Produto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produto", DbType="Int NOT NULL")]
		public int id_produto
		{
			get
			{
				return this._id_produto;
			}
			set
			{
				if ((this._id_produto != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_produtoChanging(value);
					this.SendPropertyChanging();
					this._id_produto = value;
					this.SendPropertyChanged("id_produto");
					this.Onid_produtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qtde", DbType="Int NOT NULL")]
		public int qtde
		{
			get
			{
				return this._qtde;
			}
			set
			{
				if ((this._qtde != value))
				{
					this.OnqtdeChanging(value);
					this.SendPropertyChanging();
					this._qtde = value;
					this.SendPropertyChanged("qtde");
					this.OnqtdeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qtde_C", DbType="Int NOT NULL")]
		public int qtde_C
		{
			get
			{
				return this._qtde_C;
			}
			set
			{
				if ((this._qtde_C != value))
				{
					this.Onqtde_CChanging(value);
					this.SendPropertyChanging();
					this._qtde_C = value;
					this.SendPropertyChanged("qtde_C");
					this.Onqtde_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qtde_S", DbType="Int NOT NULL")]
		public int qtde_S
		{
			get
			{
				return this._qtde_S;
			}
			set
			{
				if ((this._qtde_S != value))
				{
					this.Onqtde_SChanging(value);
					this.SendPropertyChanging();
					this._qtde_S = value;
					this.SendPropertyChanged("qtde_S");
					this.Onqtde_SChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_Estoque", Storage="_Produto", ThisKey="id_produto", OtherKey="id", IsForeignKey=true)]
		public Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.Estoque.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.Estoque.Add(this);
						this._id_produto = value.id;
					}
					else
					{
						this._id_produto = default(int);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.itens_venda")]
	public partial class ItensVenda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_produto;
		
		private decimal _valor_venda;
		
		private int _id_venda;
		
		private int _qtde;
		
		private System.Nullable<char> _C_ou_S;
		
		private EntityRef<Venda> _Venda;
		
		private EntityRef<Produto> _Produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_produtoChanging(int value);
    partial void Onid_produtoChanged();
    partial void Onvalor_vendaChanging(decimal value);
    partial void Onvalor_vendaChanged();
    partial void Onid_vendaChanging(int value);
    partial void Onid_vendaChanged();
    partial void OnqtdeChanging(int value);
    partial void OnqtdeChanged();
    partial void OnC_ou_SChanging(System.Nullable<char> value);
    partial void OnC_ou_SChanged();
    #endregion
		
		public ItensVenda()
		{
			this._Venda = default(EntityRef<Venda>);
			this._Produto = default(EntityRef<Produto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_produto", DbType="Int NOT NULL")]
		public int id_produto
		{
			get
			{
				return this._id_produto;
			}
			set
			{
				if ((this._id_produto != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_produtoChanging(value);
					this.SendPropertyChanging();
					this._id_produto = value;
					this.SendPropertyChanged("id_produto");
					this.Onid_produtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valor_venda", DbType="Decimal(12,2) NOT NULL")]
		public decimal valor_venda
		{
			get
			{
				return this._valor_venda;
			}
			set
			{
				if ((this._valor_venda != value))
				{
					this.Onvalor_vendaChanging(value);
					this.SendPropertyChanging();
					this._valor_venda = value;
					this.SendPropertyChanged("valor_venda");
					this.Onvalor_vendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_venda", DbType="Int NOT NULL")]
		public int id_venda
		{
			get
			{
				return this._id_venda;
			}
			set
			{
				if ((this._id_venda != value))
				{
					if (this._Venda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_vendaChanging(value);
					this.SendPropertyChanging();
					this._id_venda = value;
					this.SendPropertyChanged("id_venda");
					this.Onid_vendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qtde", DbType="Int NOT NULL")]
		public int qtde
		{
			get
			{
				return this._qtde;
			}
			set
			{
				if ((this._qtde != value))
				{
					this.OnqtdeChanging(value);
					this.SendPropertyChanging();
					this._qtde = value;
					this.SendPropertyChanged("qtde");
					this.OnqtdeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_ou_S", DbType="Char(1)")]
		public System.Nullable<char> C_ou_S
		{
			get
			{
				return this._C_ou_S;
			}
			set
			{
				if ((this._C_ou_S != value))
				{
					this.OnC_ou_SChanging(value);
					this.SendPropertyChanging();
					this._C_ou_S = value;
					this.SendPropertyChanged("C_ou_S");
					this.OnC_ou_SChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_itens_venda", Storage="_Venda", ThisKey="id_venda", OtherKey="id", IsForeignKey=true)]
		public Venda Venda
		{
			get
			{
				return this._Venda.Entity;
			}
			set
			{
				Venda previousValue = this._Venda.Entity;
				if (((previousValue != value) 
							|| (this._Venda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venda.Entity = null;
						previousValue.ItensVenda.Remove(this);
					}
					this._Venda.Entity = value;
					if ((value != null))
					{
						value.ItensVenda.Add(this);
						this._id_venda = value.id;
					}
					else
					{
						this._id_venda = default(int);
					}
					this.SendPropertyChanged("Venda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_itens_venda", Storage="_Produto", ThisKey="id_produto", OtherKey="id", IsForeignKey=true)]
		public Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.ItensVenda.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.ItensVenda.Add(this);
						this._id_produto = value.id;
					}
					else
					{
						this._id_produto = default(int);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
